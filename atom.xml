<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hanjingyuan.github.io</id>
    <title>汉景源的博客</title>
    <updated>2020-06-10T09:13:39.266Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hanjingyuan.github.io"/>
    <link rel="self" href="https://hanjingyuan.github.io/atom.xml"/>
    <subtitle>我只是一个GIS工程师，来自长沙。</subtitle>
    <logo>https://hanjingyuan.github.io/images/avatar.png</logo>
    <icon>https://hanjingyuan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 汉景源的博客</rights>
    <entry>
        <title type="html"><![CDATA[java服务bat脚本配置]]></title>
        <id>https://hanjingyuan.github.io/post/L8syXUk_m/</id>
        <link href="https://hanjingyuan.github.io/post/L8syXUk_m/">
        </link>
        <updated>2020-06-10T09:12:14.000Z</updated>
        <content type="html"><![CDATA[<pre><code>install.bat 
net stop com-hnup-gis-sso-gateway
sc delete  com-hnup-gis-sso-gateway
%~dp0com-hnup-gis-sso-gateway.exe install 
net start com-hnup-gis-sso-gateway
pause
</code></pre>
<pre><code>run.bat
java -jar com-hnup-gis-osmp-serv.jar  
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[openlayers中icon融合加文字白边]]></title>
        <id>https://hanjingyuan.github.io/post/FCJ7DjNlr/</id>
        <link href="https://hanjingyuan.github.io/post/FCJ7DjNlr/">
        </link>
        <updated>2020-06-09T06:30:17.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-js">    zfServiceApi.transCoors2000ToCST(coors[0],coors[1]).then(resp=&gt;{
        let data = resp;
        var canvas = document.createElement(&quot;canvas&quot;);
        canvas.width = 100;
        canvas.height = 40;
        var context = canvas.getContext(&quot;2d&quot;);
        context.rect(0 , 0 , canvas.width , canvas.height);
        var myImage = new Image();
        myImage.src = &quot;./assets/images/base.png&quot;;  //背景图片 你自己本地的图片或者在线图片
        myImage.crossOrigin = 'Anonymous';
        myImage.onload = function(){
            context.drawImage(myImage , 0 , 0 , 36 , 40);
            var myImage2 = new Image();
            myImage2.src = item.Image;  //你自己本地的图片或者在线图片
            myImage2.crossOrigin = 'Anonymous';
            myImage2.onload = function(){
                context.drawImage(myImage2 , 7 , 7 , 22 , 22);

                let x = data[1];
                let y = data[2];
                x = x.split(&quot;:&quot;)[1];
                y = y.split(&quot;:&quot;)[1];
                let feature = new ol.Feature({
                    geometry:new ol.geom.Point([x,y])
                });
                let style = new ol.style.Style({
                    image: new ol.style.Icon(({
                        anchor: [0.5, 46],
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        img: canvas,
                        src:undefined,
                        imgSize: canvas ? [canvas.width, canvas.height] : undefined
                    })),
                    text: new ol.style.Text({
                        text:  item.CreateName,
                        font: 'bold 16px PingFang SC',
                        overflow: true,
                        fill: new ol.style.Fill({
                            color: 'rgba(66, 133, 244,1)'
                        }),
                        backgroundStroke: ol.style.Stroke({
                            color: '#ffffff',
                            width: 1
                        }),
                        backgroundFill: ol.style.Fill({
                            color: &quot;#ffffff&quot;
                        }),
                        placement: &quot;point&quot;,
                        offsetX: 5,
                        offsetY: -25,
                        stroke: new ol.style.Stroke({
                            color: '#ffffff',
                            width: 3
                        })
                    })
                });
                feature.setStyle(style);
            }
        };


    });
    ```</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[openlayers分辨率和比例尺]]></title>
        <id>https://hanjingyuan.github.io/post/73V4Mg8d1/</id>
        <link href="https://hanjingyuan.github.io/post/73V4Mg8d1/">
        </link>
        <updated>2020-05-21T10:02:12.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>比例尺——屏幕上1米代表多少地图坐标单位；分辨率——屏幕上一个像素代表多少地图坐标单位。<br>
两者的转换关系是：scale = resolution * 96* 39.3701（1米=39.3701英寸，1英寸=96像素，96或者72要根据实际情况来决定。）<br>
对于上述公式，指的是投影坐标系，如果是经纬度坐标系，就要得到一度（经纬度）等于多少米即可；</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[geotools maven仓库配置]]></title>
        <id>https://hanjingyuan.github.io/post/io2CxfhdM/</id>
        <link href="https://hanjingyuan.github.io/post/io2CxfhdM/">
        </link>
        <updated>2020-05-18T02:33:50.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>配置maven的setting.xml，注意不要把mirror配置为*，不然会拦截</li>
</ol>
<pre><code class="language-xml">  &lt;mirrors&gt;
	 &lt;mirror&gt;
		&lt;id&gt;alimaven&lt;/id&gt;
		&lt;name&gt;aliyun maven&lt;/name&gt;
		&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;
		&lt;mirrorOf&gt;*,!osgeo,!maven2-repository.dev.java.net,!boundless&lt;/mirrorOf&gt; 
	 &lt;/mirror&gt;
  &lt;/mirrors&gt;
</code></pre>
<ol start="2">
<li>配置pom文件，增加对应所需要的镜像即可；</li>
</ol>
<pre><code class="language-xml">    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;osgeo&lt;/id&gt;
            &lt;name&gt;OSGeo Release Repository&lt;/name&gt;
            &lt;url&gt;https://repo.osgeo.org/repository/release/&lt;/url&gt;
            &lt;snapshots&gt;&lt;enabled&gt;false&lt;/enabled&gt;&lt;/snapshots&gt;
            &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
        &lt;/repository&gt;
        &lt;repository&gt;
            &lt;id&gt;osgeo-snapshot&lt;/id&gt;
            &lt;name&gt;OSGeo Snapshot Repository&lt;/name&gt;
            &lt;url&gt;https://repo.osgeo.org/repository/snapshot/&lt;/url&gt;
            &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
            &lt;releases&gt;&lt;enabled&gt;false&lt;/enabled&gt;&lt;/releases&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[通用滚动条样式]]></title>
        <id>https://hanjingyuan.github.io/post/-8fA9FS8r/</id>
        <link href="https://hanjingyuan.github.io/post/-8fA9FS8r/">
        </link>
        <updated>2020-05-09T01:36:28.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-css">//公共滚动条样式
::-webkit-scrollbar {/*滚动条整体样式*/
  width: 5px;     /*高宽分别对应横竖滚动条的尺寸*/
  height: 1px;
}
::-webkit-scrollbar-thumb {/*滚动条里面小方块*/
  border-radius: 5px;
  -webkit-box-shadow: inset 0 0 2.5px rgba(0,0,0,0.2);
  background: #535353;
}
::-webkit-scrollbar-track {/*滚动条里面轨道*/
  -webkit-box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
  border-radius: 5px;
  background: #EDEDED;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[pg常用方法]]></title>
        <id>https://hanjingyuan.github.io/post/ZssQT_n6I/</id>
        <link href="https://hanjingyuan.github.io/post/ZssQT_n6I/">
        </link>
        <updated>2020-04-07T06:12:44.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>时间戳设置</li>
</ol>
<pre><code class="language-sql">drop table if exists student;
create table student(
   id int primary key     not null,
   name        char(10)   not null,   
   address     char(50),
   create_time timestamp default current_timestamp,
   update_time timestamp default current_timestamp
);
</code></pre>
<ol start="2">
<li>修改坐标系</li>
</ol>
<blockquote>
<p>SELECT UpdateGeometrySRID('表名','geom',32649);</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[postgis polygon转multipolygon]]></title>
        <id>https://hanjingyuan.github.io/post/WiPCj1MDD/</id>
        <link href="https://hanjingyuan.github.io/post/WiPCj1MDD/">
        </link>
        <updated>2020-03-31T02:02:33.000Z</updated>
        <content type="html"><![CDATA[<pre><code>ALTER TABLE my_table
    ALTER COLUMN geom TYPE geometry(MultiPolygon,4490) USING ST_Multi(geom);
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ArcGIS Server常用方法]]></title>
        <id>https://hanjingyuan.github.io/post/-ngzGVnMK/</id>
        <link href="https://hanjingyuan.github.io/post/-ngzGVnMK/">
        </link>
        <updated>2020-03-14T07:13:19.000Z</updated>
        <content type="html"><![CDATA[<pre><code>identify面查询方法
http://10.14.3.41:6080/arcgis/rest/services/HNPHYZT/MapServer/identify?geometry=%7B%22rings%22%3A%5B%5B%5B110.16831%2C28.25005%5D%2C%5B110.16276%2C28.24864%5D%2C%5B110.16498%2C28.24886%5D%2C%5B110.16831%2C28.25005%5D%2C%5D%5D%2C%22spatialReference%22%3A%7B%22wkid%22%3A4490%7D%7D&amp;geometryType=esriGeometryPolygon&amp;sr=4490&amp;layers=4&amp;layerDefs=&amp;time=&amp;layerTimeOptions=&amp;tolerance=1&amp;mapExtent=83.21649896800005%2C18.498789527000042%2C134.81281152600002%2C35.129373515000054&amp;imageDisplay=800%2C850%2C96&amp;returnGeometry=true&amp;maxAllowableOffset=&amp;dynamicLayers=&amp;returnZ=false&amp;returnM=false&amp;gdbVersion=&amp;f=html
</code></pre>
<pre><code>http://10.14.3.41:6080/arcgis/rest/services/HNPHYZT/MapServer/2/query?where=&amp;text=&amp;objectIds=&amp;time=&amp;geometry=%7B%22rings%22%3A%5B%5B%5B113.07721%2C28.16075%5D%2C%5B113.07278%2C28.15478%5D%2C%5B113.08181%2C28.15462%5D%2C%5B113.07721%2C28.16075%5D%2C%5D%5D%2C%22spatialReference%22%3A%7B%22wkid%22%3A4490%7D%7D&amp;geometryType=esriGeometryPolygon&amp;inSR=&amp;spatialRel=esriSpatialRelWithin&amp;relationParam=&amp;outFields=*&amp;returnGeometry=true&amp;maxAllowableOffset=&amp;outSR=&amp;returnIdsOnly=false&amp;returnCountOnly=false&amp;orderByFields=&amp;groupByFieldsForStatistics=&amp;outStatistics=&amp;returnZ=false&amp;returnM=false&amp;gdbVersion=&amp;f=html
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[获取arcgis图层某一个图层中所有属性表的方法]]></title>
        <id>https://hanjingyuan.github.io/post/6bOB05mt4/</id>
        <link href="https://hanjingyuan.github.io/post/6bOB05mt4/">
        </link>
        <updated>2020-03-10T03:01:03.000Z</updated>
        <content type="html"><![CDATA[<pre><code>http://59.231.10.67:20030/arcgis/rest/services/XZ/HNRegion4490/MapServer/0/query?where=1%3D1&amp;text=&amp;objectIds=&amp;time=&amp;geometry=&amp;geometryType=esriGeometryEnvelope&amp;inSR=&amp;spatialRel=esriSpatialRelIntersects&amp;relationParam=&amp;outFields=&amp;returnGeometry=true&amp;maxAllowableOffset=&amp;outSR=&amp;returnIdsOnly=false&amp;returnCountOnly=false&amp;orderByFields=&amp;groupByFieldsForStatistics=&amp;outStatistics=&amp;returnZ=false&amp;returnM=false&amp;gdbVersion=&amp;f=html
</code></pre>
<pre><code>http://59.231.10.67:20030/arcgis/rest/services/XZ/HNRegion4490/MapServer/0/query?where=1%3D1&amp;text=&amp;objectIds=&amp;time=&amp;geometry=%7B%22rings%22%3A%5B%5B%5B113.07721%2C28.16075%5D%2C%5B113.07278%2C28.15478%5D%2C%5B113.08181%2C28.15462%5D%2C%5B113.07721%2C28.16075%5D%2C%5D%5D%2C%22spatialReference%22%3A%7B%22wkid%22%3A4490%7D%7D&amp;geometryType=esriGeometryPolygon&amp;inSR=&amp;spatialRel=esriSpatialRelIntersects&amp;relationParam=&amp;outFields=*&amp;returnGeometry=true&amp;maxAllowableOffset=&amp;outSR=&amp;returnIdsOnly=false&amp;returnCountOnly=false&amp;orderByFields=&amp;groupByFieldsForStatistics=&amp;outStatistics=&amp;returnZ=false&amp;returnM=false&amp;gdbVersion=&amp;f=html
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ArcGIS Engine10.2部分封装方法一览]]></title>
        <id>https://hanjingyuan.github.io/post/3n2MAbf6z/</id>
        <link href="https://hanjingyuan.github.io/post/3n2MAbf6z/">
        </link>
        <updated>2020-03-03T00:44:57.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-c#">using ESRI.ArcGIS.DataSourcesFile;
using ESRI.ArcGIS.DataSourcesGDB;
using ESRI.ArcGIS.esriSystem;
using ESRI.ArcGIS.Geodatabase;
using ESRI.ArcGIS.Geometry;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace XXZX.OSMP.OneMap.Gis
{
    public class GisDatasource
    {

        /// &lt;summary&gt;
        /// 连接SDE方法1
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;_pServerIP&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pInstance&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pDatabase&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pUser&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pPassword&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pVersion&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IWorkspace GetSDEWorkspace(String _pServerIP, String _pInstance, String _pDatabase, String _pUser, String _pPassword, string _pVersion)
        {
            ESRI.ArcGIS.esriSystem.IPropertySet pPropertySet = new ESRI.ArcGIS.esriSystem.PropertySetClass();
            pPropertySet.SetProperty(&quot;SERVER&quot;, _pServerIP);
            pPropertySet.SetProperty(&quot;INSTANCE&quot;, _pInstance);
            pPropertySet.SetProperty(&quot;DATABASE&quot;, _pDatabase);
            pPropertySet.SetProperty(&quot;USER&quot;, _pUser);
            pPropertySet.SetProperty(&quot;PASSWORD&quot;, _pPassword);
            //pPropertySet.SetProperty(&quot;VERSION&quot;, _pVersion);
            // pPropertySet.SetProperty(&quot;AUTHENTICATION_MODE&quot;, &quot;DBMS&quot;);
            IWorkspaceFactory workspaceFactory = new SdeWorkspaceFactory();
            IWorkspace pws = workspaceFactory.Open(pPropertySet, 0);
            return pws;
        }

        /// &lt;summary&gt;
        /// 连接SDE方法2
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;_pServerIP&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pInstance&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pDatabase&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pUser&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pPassword&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pVersion&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;2
        public static IFeatureWorkspace GetSDEWorkspace2(String _pServerIP, String _pInstance, String _pDatabase, String _pUser, String _pPassword, string _pVersion)
        {
            SdeWorkspaceFactory sdeWorkspaceFactory = new SdeWorkspaceFactory();
            PropertySet pset = new PropertySet();
            pset.SetProperty(&quot;SERVER&quot;, _pServerIP);
            pset.SetProperty(&quot;INSTANCE&quot;, _pInstance);
            pset.SetProperty(&quot;DATABASE&quot;, _pDatabase);
            pset.SetProperty(&quot;USER&quot;, _pUser);
            pset.SetProperty(&quot;PASSWORD&quot;, _pPassword);

            IWorkspaceFactory workspaceFactroy = new SdeWorkspaceFactoryClass();
            IFeatureWorkspace featureWorkspace = (IFeatureWorkspace)workspaceFactroy.Open(pset, 0);
            return featureWorkspace;
        }

        /// &lt;summary&gt;
        /// 连接gdb数据库
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;path&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IWorkspace GetGDBWorkspace(String path)
        {
            //@&quot;E:\workspace\layer\test.gdb&quot;
            IWorkspaceFactory pWsFac = new FileGDBWorkspaceFactoryClass();
            IWorkspace pWs = pWsFac.OpenFromFile(path, 0);
            return pWs;
        }

        /// &lt;summary&gt;
        /// 打开shp文件
        /// @&quot;E:\workspace\layer\publish\publish1\publish1.shp&quot;
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;filePath&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IFeatureClass GetShpFeatureClass(string filePath)
        {

            IWorkspaceFactory pWorkspaceFactory = new ShapefileWorkspaceFactory();
            IWorkspaceFactoryLockControl pWorkspaceFactoryLockControl = pWorkspaceFactory as IWorkspaceFactoryLockControl;
            if (pWorkspaceFactoryLockControl.SchemaLockingEnabled)
            {
                pWorkspaceFactoryLockControl.DisableSchemaLocking();
            }
            IWorkspace pWorkspace = pWorkspaceFactory.OpenFromFile(System.IO.Path.GetDirectoryName(filePath), 0);
            IFeatureWorkspace pFeatureWorkspace = pWorkspace as IFeatureWorkspace;
            IFeatureClass pFeatureClass = pFeatureWorkspace.OpenFeatureClass(System.IO.Path.GetFileName(filePath));
            return pFeatureClass;
        }

    }
}

</code></pre>
]]></content>
    </entry>
</feed>