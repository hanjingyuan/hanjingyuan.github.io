<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hanjingyuan.github.io</id>
    <title>汉景源的博客</title>
    <updated>2019-12-16T03:15:29.648Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hanjingyuan.github.io"/>
    <link rel="self" href="https://hanjingyuan.github.io/atom.xml"/>
    <subtitle>我只是一个GIS工程师，来自长沙。</subtitle>
    <logo>https://hanjingyuan.github.io/images/avatar.png</logo>
    <icon>https://hanjingyuan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 汉景源的博客</rights>
    <entry>
        <title type="html"><![CDATA[服务部署流程]]></title>
        <id>https://hanjingyuan.github.io/post/jjtD2Z_HM</id>
        <link href="https://hanjingyuan.github.io/post/jjtD2Z_HM">
        </link>
        <updated>2019-12-16T01:44:35.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>jdk/tomcat的环境安装</li>
<li>postgresql数据局/postgis的安装</li>
<li>geoserver war包的安装</li>
</ol>
<pre><code>3.1 geoserver 跨域的配置：1）添加跨域jar包；2）修改web.xml文件，释放跨域；
3.2 主键暴露 
3.3 tomcat的put和delete方法释放
</code></pre>
<ol start="4">
<li>pg数据表的迁移</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[pg mybatis 多表联查]]></title>
        <id>https://hanjingyuan.github.io/post/G1Z5TSaLV</id>
        <link href="https://hanjingyuan.github.io/post/G1Z5TSaLV">
        </link>
        <updated>2019-12-12T07:25:09.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-sql">SELECT r.* from tb_role r where r.role_id in (select ur.role_id from tb_user_role ur where user_id = '470a05096a8968d8edb51c9b280ed06d')
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[postgresql数据库的导入和导出]]></title>
        <id>https://hanjingyuan.github.io/post/sZz9cqVrF</id>
        <link href="https://hanjingyuan.github.io/post/sZz9cqVrF">
        </link>
        <updated>2019-11-27T02:10:09.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>数据库的导出</li>
</ol>
<pre><code>1.在pg数据库的bin目录下执行cmd命令行（一定要用cmd命令行），或者需要配置环境变量，包含了pg数据库安装根目录下的bin目录和lib目录，配置到Path中去即可；
1.pg_dump  -U postgres  数据库名称 &gt; c:\db.sql ——数据库整体的导出
1.1 pg_dump -U postgres -s -f open_map.sql open_map（仅导出表结构不到处表数据）
2.pg_dump -U postgres poidata（数据库名称） -t poi（表名称） -f /home/share/wg/poi.sql（输出路径）——单表的导出
</code></pre>
<ol start="2">
<li>数据库的导出</li>
</ol>
<pre><code>1.执行psql -U postgres -d gwh（数据库名称，要预先创建好） &lt; gwh.sql（上一步中导出的sql文件，放到bin目录中）；
2.数据表的导入：。。。
3.执行之后需要先进行一定时间的等待才能完成导入的操作；
</code></pre>
<ol start="3">
<li>参考</li>
</ol>
<blockquote>
<p>https://www.cnblogs.com/huajiezh/p/6186309.html<br>
https://blog.csdn.net/fct2001140269/article/details/88736608</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[geoserver basic认证]]></title>
        <id>https://hanjingyuan.github.io/post/xOnHlsUVk</id>
        <link href="https://hanjingyuan.github.io/post/xOnHlsUVk">
        </link>
        <updated>2019-11-14T09:43:20.000Z</updated>
        <content type="html"><![CDATA[<pre><code>String plainCredentials = &quot;test1:123456&quot;;
String base64Credentials = new String(Base64.encodeBase64(plainCredentials.getBytes()));
//输出结果dGVzdDE6MTIzNDU2
//在js请求时，把Authorization:Basic dGVzdDE6MTIzNDU2放到header请求中即可
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[postgresql中user表名的问题]]></title>
        <id>https://hanjingyuan.github.io/post/0QUeU8sZi</id>
        <link href="https://hanjingyuan.github.io/post/0QUeU8sZi">
        </link>
        <updated>2019-11-13T02:10:44.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>不要在pg数据库中使用user表名，因为pg数据中会自带一张隐藏的user表，如果使用user表会造成冲突，但是pg数据库本身却不会提示；</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[css布局-居中布局]]></title>
        <id>https://hanjingyuan.github.io/post/vmgZDFYz1</id>
        <link href="https://hanjingyuan.github.io/post/vmgZDFYz1">
        </link>
        <updated>2019-11-05T14:02:04.000Z</updated>
        <content type="html"><![CDATA[<h2 id="方案一">方案一</h2>
<figure data-type="image" tabindex="1"><img src="https://hanjingyuan.github.io/post-images/1572962546779.png" alt=""></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[css布局-垂直居中]]></title>
        <id>https://hanjingyuan.github.io/post/DXqxFXLgT</id>
        <link href="https://hanjingyuan.github.io/post/DXqxFXLgT">
        </link>
        <updated>2019-11-05T13:41:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1第一种方案">1.第一种方案</h2>
<figure data-type="image" tabindex="1"><img src="https://hanjingyuan.github.io/post-images/1572961462052.png" alt=""></figure>
<h2 id="2第二种方案">2.第二种方案</h2>
<figure data-type="image" tabindex="2"><img src="https://hanjingyuan.github.io/post-images/1572961873060.png" alt=""></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[css布局-水平居中]]></title>
        <id>https://hanjingyuan.github.io/post/GnBLhuAwH</id>
        <link href="https://hanjingyuan.github.io/post/GnBLhuAwH">
        </link>
        <updated>2019-11-05T13:17:21.000Z</updated>
        <content type="html"><![CDATA[<h2 id="方案一">方案一</h2>
<pre><code class="language-css">  .parent{
    width: 100%;
    height: 200px;
    text-align: center;
  }

  .child{
    width: 200px;
    height: 200px;
    display: inline-block;
  }
</code></pre>
<p>##　方案二</p>
<pre><code class="language-css">  .child{
    display: table/block;
    margin: 0 auto;
  }
  如果脱离文档流，那么这种方式无效；
</code></pre>
<blockquote>
<p>脱离文档流的三种方式<br>
1.float浮动<br>
2.绝对定位<br>
3.fix固定定位</p>
</blockquote>
<h2 id="方案三">方案三</h2>
<figure data-type="image" tabindex="1"><img src="https://hanjingyuan.github.io/post-images/1572960814254.png" alt=""></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Centos常用操作总结]]></title>
        <id>https://hanjingyuan.github.io/post/JkeSUFZAI</id>
        <link href="https://hanjingyuan.github.io/post/JkeSUFZAI">
        </link>
        <updated>2019-10-30T00:36:04.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>目录切换之间的操作</li>
</ol>
<blockquote>
<p>cd www , 意思是 到www目录；<br>
cd .. , 意思是到上一级目录；<br>
cd - ,意思是返回到上次的目录，类似windows返回 ；<br>
cd /，意思是回到根目录。</p>
</blockquote>
<ol start="2">
<li>查看当前目录下的文件</li>
</ol>
<blockquote>
<p>ls；</p>
</blockquote>
<ol start="3">
<li>编辑某个文件</li>
</ol>
<blockquote>
<p>vi 文件名；<br>
insert 进入编辑模式；<br>
esc退出编辑模式，输入:wq保存退出；</p>
</blockquote>
<ol start="4">
<li>jdk和tomcat的安装</li>
</ol>
<blockquote>
<p>最好使用yum的方式进行安装，这样的好处是不用配置环境变量；</p>
</blockquote>
<ol start="5">
<li>阿里云的入站规则</li>
</ol>
<blockquote>
<p>阿里云默认会把入站的端口关闭，需要把端口打开；</p>
</blockquote>
<ol start="6">
<li>文件的上传</li>
</ol>
<blockquote>
<p>yum   -y  install  lrzsz 进行安装<br>
rz -y 进行文件的上传，上传的位置是当前目录</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1028-1103周总结]]></title>
        <id>https://hanjingyuan.github.io/post/1028-1103-zhou-zong-jie</id>
        <link href="https://hanjingyuan.github.io/post/1028-1103-zhou-zong-jie">
        </link>
        <updated>2019-10-28T01:25:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1028">1028</h2>
<h3 id="1maven本地包的配置">1.maven本地包的配置</h3>
<ol>
<li>pom文件的配置</li>
</ol>
<pre><code class="language-xml">        &lt;!--geoserver restful--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;it.geosolutions&lt;/groupId&gt;
            &lt;artifactId&gt;geoserver-manager&lt;/artifactId&gt;
            &lt;version&gt;1.7-SNAPSHOT&lt;/version&gt;
            &lt;!--这里使用的是本地jar包集成，远程的环境拉不下来--&gt;
            &lt;scope&gt;system&lt;/scope&gt;
            &lt;systemPath&gt;${basedir}/lib/geoserver-manager-1.7.0.jar&lt;/systemPath&gt;
        &lt;/dependency&gt;
    &lt;build&gt;
        &lt;resources&gt;
            &lt;!--在lib目录下存放着因为网络原因无法拉取到本地的jar包--&gt;
            &lt;!--maven默认打包时不会包含这些jar包，所以需要单独进行配置--&gt;
            &lt;!--包含本地jar包的配置--&gt;
            &lt;resource&gt;
                &lt;directory&gt;${project.basedir}/lib&lt;/directory&gt;
                &lt;targetPath&gt;BOOT-INF/lib/&lt;/targetPath&gt;
                &lt;includes&gt;
                    &lt;include&gt;**/*.jar&lt;/include&gt;
                &lt;/includes&gt;
            &lt;/resource&gt;
            &lt;resource&gt;
                &lt;directory&gt;src/main/resources&lt;/directory&gt;
                &lt;targetPath&gt;BOOT-INF/classes/&lt;/targetPath&gt;
            &lt;/resource&gt;
        &lt;/resources&gt;
    &lt;/build&gt;
</code></pre>
<ol start="2">
<li>根目录下创建lib文件夹，并且把所需要的jar包放入到文件夹中<br>
<img src="https://hanjingyuan.github.io/post-images/1572226106874.png" alt=""></li>
</ol>
<h3 id="2maven配置的若干问题">2.maven配置的若干问题</h3>
<ol>
<li>不要使用3.6.1以上版本的maven；</li>
<li>其他相关问题的参考解决办法：</li>
</ol>
<pre><code>https://blog.csdn.net/ashleyjun/article/details/101106810
https://blog.csdn.net/Certain_/article/details/90745360
</code></pre>
<h3 id="3idea与蓝灯配置的方法">3.idea与蓝灯配置的方法</h3>
<blockquote>
<p>http://www.itzhai.com/intellij-idea-proxy-settings.html</p>
</blockquote>
<h3 id="4maven仓库地址的配置">4.maven仓库地址的配置</h3>
<pre><code class="language-xml">&lt;mirror&gt;
    &lt;id&gt;alimaven&lt;/id&gt;
    &lt;name&gt;aliyun maven&lt;/name&gt;
    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;
    &lt;mirrorOf&gt;*,!osgeo,!maven2-repository.dev.java.net,!boundless&lt;/mirrorOf&gt; 
&lt;/mirror&gt;
</code></pre>
<h2 id="1031">1031</h2>
<h3 id="1maven忽略测试进行打包">1.maven忽略测试进行打包</h3>
<blockquote>
<p>mvn clean package -Dmaven.test.skip=true</p>
</blockquote>
]]></content>
    </entry>
</feed>