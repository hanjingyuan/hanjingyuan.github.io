<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hanjingyuan.github.io</id>
    <title>汉景源的博客</title>
    <updated>2020-03-03T00:46:45.941Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hanjingyuan.github.io"/>
    <link rel="self" href="https://hanjingyuan.github.io/atom.xml"/>
    <subtitle>我只是一个GIS工程师，来自长沙。</subtitle>
    <logo>https://hanjingyuan.github.io/images/avatar.png</logo>
    <icon>https://hanjingyuan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 汉景源的博客</rights>
    <entry>
        <title type="html"><![CDATA[ArcGIS Engine10.2部分封装方法一览]]></title>
        <id>https://hanjingyuan.github.io/post/3n2MAbf6z/</id>
        <link href="https://hanjingyuan.github.io/post/3n2MAbf6z/">
        </link>
        <updated>2020-03-03T00:44:57.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-c#">using ESRI.ArcGIS.DataSourcesFile;
using ESRI.ArcGIS.DataSourcesGDB;
using ESRI.ArcGIS.esriSystem;
using ESRI.ArcGIS.Geodatabase;
using ESRI.ArcGIS.Geometry;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace XXZX.OSMP.OneMap.Gis
{
    public class GisDatasource
    {

        /// &lt;summary&gt;
        /// 连接SDE方法1
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;_pServerIP&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pInstance&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pDatabase&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pUser&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pPassword&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pVersion&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IWorkspace GetSDEWorkspace(String _pServerIP, String _pInstance, String _pDatabase, String _pUser, String _pPassword, string _pVersion)
        {
            ESRI.ArcGIS.esriSystem.IPropertySet pPropertySet = new ESRI.ArcGIS.esriSystem.PropertySetClass();
            pPropertySet.SetProperty(&quot;SERVER&quot;, _pServerIP);
            pPropertySet.SetProperty(&quot;INSTANCE&quot;, _pInstance);
            pPropertySet.SetProperty(&quot;DATABASE&quot;, _pDatabase);
            pPropertySet.SetProperty(&quot;USER&quot;, _pUser);
            pPropertySet.SetProperty(&quot;PASSWORD&quot;, _pPassword);
            //pPropertySet.SetProperty(&quot;VERSION&quot;, _pVersion);
            // pPropertySet.SetProperty(&quot;AUTHENTICATION_MODE&quot;, &quot;DBMS&quot;);
            IWorkspaceFactory workspaceFactory = new SdeWorkspaceFactory();
            IWorkspace pws = workspaceFactory.Open(pPropertySet, 0);
            return pws;
        }

        /// &lt;summary&gt;
        /// 连接SDE方法2
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;_pServerIP&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pInstance&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pDatabase&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pUser&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pPassword&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;_pVersion&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;2
        public static IFeatureWorkspace GetSDEWorkspace2(String _pServerIP, String _pInstance, String _pDatabase, String _pUser, String _pPassword, string _pVersion)
        {
            SdeWorkspaceFactory sdeWorkspaceFactory = new SdeWorkspaceFactory();
            PropertySet pset = new PropertySet();
            pset.SetProperty(&quot;SERVER&quot;, _pServerIP);
            pset.SetProperty(&quot;INSTANCE&quot;, _pInstance);
            pset.SetProperty(&quot;DATABASE&quot;, _pDatabase);
            pset.SetProperty(&quot;USER&quot;, _pUser);
            pset.SetProperty(&quot;PASSWORD&quot;, _pPassword);

            IWorkspaceFactory workspaceFactroy = new SdeWorkspaceFactoryClass();
            IFeatureWorkspace featureWorkspace = (IFeatureWorkspace)workspaceFactroy.Open(pset, 0);
            return featureWorkspace;
        }

        /// &lt;summary&gt;
        /// 连接gdb数据库
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;path&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IWorkspace GetGDBWorkspace(String path)
        {
            //@&quot;E:\workspace\layer\test.gdb&quot;
            IWorkspaceFactory pWsFac = new FileGDBWorkspaceFactoryClass();
            IWorkspace pWs = pWsFac.OpenFromFile(path, 0);
            return pWs;
        }

        /// &lt;summary&gt;
        /// 打开shp文件
        /// @&quot;E:\workspace\layer\publish\publish1\publish1.shp&quot;
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;filePath&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static IFeatureClass GetShpFeatureClass(string filePath)
        {

            IWorkspaceFactory pWorkspaceFactory = new ShapefileWorkspaceFactory();
            IWorkspaceFactoryLockControl pWorkspaceFactoryLockControl = pWorkspaceFactory as IWorkspaceFactoryLockControl;
            if (pWorkspaceFactoryLockControl.SchemaLockingEnabled)
            {
                pWorkspaceFactoryLockControl.DisableSchemaLocking();
            }
            IWorkspace pWorkspace = pWorkspaceFactory.OpenFromFile(System.IO.Path.GetDirectoryName(filePath), 0);
            IFeatureWorkspace pFeatureWorkspace = pWorkspace as IFeatureWorkspace;
            IFeatureClass pFeatureClass = pFeatureWorkspace.OpenFeatureClass(System.IO.Path.GetFileName(filePath));
            return pFeatureClass;
        }

    }
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ArcGIS Engine10.2环境搭建流程]]></title>
        <id>https://hanjingyuan.github.io/post/Xh7zFZ4J_/</id>
        <link href="https://hanjingyuan.github.io/post/Xh7zFZ4J_/">
        </link>
        <updated>2020-02-25T06:28:11.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>安装visual studio；</li>
<li>使用&quot;ArcGIS_Engine_DevKit_Windows_102_134944.iso&quot;依次安装runtime和sdk；</li>
<li>对ae进行激活，激活方式与desktop激活方式相同；</li>
<li>引入dll或者com组件，即可正常使用；</li>
<li>有些情况下还需要通过代码的方式进行服务的注册</li>
</ol>
<pre><code class="language-C#">ESRI.ArcGIS.esriSystem.IAoInitialize m_AoInitialize = new ESRI.ArcGIS.esriSystem.AoInitialize();
m_AoInitialize.Initialize(esriLicenseProductCode.esriLicenseProductCodeEngine;
ESRI.ArcGIS.RuntimeManager.Bind(ESRI.ArcGIS.ProductCode.EngineOrDesktop);
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java电商平台笔记（1）]]></title>
        <id>https://hanjingyuan.github.io/post/tnA6NQZjS/</id>
        <link href="https://hanjingyuan.github.io/post/tnA6NQZjS/">
        </link>
        <updated>2020-02-20T12:08:17.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>spring mvc post请求参数接收的方法</li>
</ol>
<blockquote>
<p>1.使用@RequestParam String username接收，这种方式使用的是form表单形式，或者直接使用直接使用User user接收；<br>
2.使用@RequestBody UserForm userForm形式接收，这种方式使用的是application/json方式接收。这种方式的好处是，可以把所需要的参数单独封装起来，封装在form包下，同时可以配合使用javax.validation进行表单校验。</p>
</blockquote>
<ol start="2">
<li>mybatis-generator的基础模板配置</li>
</ol>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE generatorConfiguration
        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;
        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;

&lt;generatorConfiguration&gt;
    &lt;classPathEntry location=&quot;E:\mysql-connector-java-5.1.6.jar&quot; /&gt;
    &lt;!--&lt;classPathEntry location=&quot;src/main/resources/application.yml&quot; /&gt;--&gt;
    &lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;
        &lt;!--不再追加xml--&gt;
        &lt;plugin type=&quot;org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin&quot;&gt;&lt;/plugin&gt;
        &lt;commentGenerator&gt;
            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;&gt;&lt;/property&gt;
        &lt;/commentGenerator&gt;
        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;
                        connectionURL=&quot;jdbc:mysql://localhost:3306/mall?characterEncoding=utf-8&quot;
                        userId=&quot;root&quot;
                        password=&quot;123456&quot;&gt;
        &lt;/jdbcConnection&gt;
        &lt;javaTypeResolver &gt;
            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;
        &lt;/javaTypeResolver&gt;

        &lt;javaModelGenerator targetPackage=&quot;com.imooc.mall.pojo&quot; targetProject=&quot;src/main/java&quot;&gt;
            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;
            &lt;!--&lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;--&gt;
        &lt;/javaModelGenerator&gt;

        &lt;sqlMapGenerator targetPackage=&quot;mapper&quot;  targetProject=&quot;src/main/resources/&quot;&gt;
            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;
        &lt;/sqlMapGenerator&gt;

        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.imooc.mall.dao&quot;  targetProject=&quot;src/main/java&quot;&gt;
            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;
        &lt;/javaClientGenerator&gt;

        &lt;!--&lt;table tableName=&quot;mall_order&quot; domainObjectName=&quot;Order&quot;--&gt;
               &lt;!--enableCountByExample=&quot;false&quot;--&gt;
               &lt;!--enableDeleteByExample=&quot;false&quot;--&gt;
               &lt;!--enableSelectByExample=&quot;false&quot;--&gt;
               &lt;!--enableUpdateByExample=&quot;false&quot;&gt;--&gt;
        &lt;!--&lt;/table&gt;--&gt;

        &lt;!--&lt;table tableName=&quot;mall_order_item&quot; domainObjectName=&quot;OrderItem&quot;--&gt;
               &lt;!--enableCountByExample=&quot;false&quot;--&gt;
               &lt;!--enableDeleteByExample=&quot;false&quot;--&gt;
               &lt;!--enableSelectByExample=&quot;false&quot;--&gt;
               &lt;!--enableUpdateByExample=&quot;false&quot;&gt;--&gt;
        &lt;!--&lt;/table&gt;--&gt;

        &lt;table tableName=&quot;mall_user&quot; domainObjectName=&quot;User&quot;
               enableCountByExample=&quot;false&quot;
               enableDeleteByExample=&quot;false&quot;
               enableSelectByExample=&quot;false&quot;
               enableUpdateByExample=&quot;false&quot;&gt;
        &lt;/table&gt;

    &lt;/context&gt;
    &lt;!--mvn mybatis-generator:generate--&gt;
&lt;/generatorConfiguration&gt;
</code></pre>
<blockquote>
<p>其他配置可以参加：https://www.jianshu.com/p/e09d2370b796</p>
</blockquote>
<ol start="3">
<li>所有的常量不要使用硬编码，全部使用枚举或者常量方法；</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[4490坐标系分辨率和比例尺]]></title>
        <id>https://hanjingyuan.github.io/post/TJSzP2cl5/</id>
        <link href="https://hanjingyuan.github.io/post/TJSzP2cl5/">
        </link>
        <updated>2020-02-17T07:02:30.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-js">S.resolutions = [
        0.0125764139776733,//500万
        0.0062882069888366,//250万
        0.0025152827955347,//100万
        0.0012576413977673,//50万
        0.0006288206988837,//25万
        0.0003144103494418,//125000
        0.0001609780989142,//64000
        0.0000804890494571,//32000
        0.0000402445247286,//16000
        0.0000201222623643,//8000
        0.0000100611311821,//4000
        0.0000050305655911,//2000
        0.0000025152827955,//1000
        0.0000012576413978//500
    ];

    S.scales = [
        5000000,
        2500000,
        1000000,
        500000,
        250000,
        125000,
        64000,
        32000,
        16000,
        8000,
        4000,
        2000,
        1000,
        500
    ];
    ```</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[openlayers问题汇总]]></title>
        <id>https://hanjingyuan.github.io/post/Avfyv2HWg/</id>
        <link href="https://hanjingyuan.github.io/post/Avfyv2HWg/">
        </link>
        <updated>2020-01-14T07:26:40.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>resolutions的加载</li>
</ol>
<blockquote>
<p>使用resulotions时，zoom会无效，此时需要指定确定的resolution值从而实现分级；</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Geotools maven问题]]></title>
        <id>https://hanjingyuan.github.io/post/E14UYvFzE/</id>
        <link href="https://hanjingyuan.github.io/post/E14UYvFzE/">
        </link>
        <updated>2020-01-13T01:12:16.000Z</updated>
        <content type="html"><![CDATA[<p>在maven中使用geotools时，一定要使用固定版本号，而不是使用snapshot，如果使用snapshot，则会导致每次打包时都会去远程仓库中下载匹配最新的包，而不是使用本地的包；</p>
<pre><code class="language-xml">    &lt;properties&gt;
        &lt;java.version&gt;1.8&lt;/java.version&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;geotools.version&gt;21.4&lt;/geotools.version&gt;
    &lt;/properties&gt;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Geotools坐标转换]]></title>
        <id>https://hanjingyuan.github.io/post/sNQdoSQE3/</id>
        <link href="https://hanjingyuan.github.io/post/sNQdoSQE3/">
        </link>
        <updated>2020-01-10T08:18:16.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>创建坐标转换</li>
</ol>
<pre><code class="language-java">    /**
     * 创建坐标系转换方法
     * @param sourceWkt 源坐标系WKT定义
     * @param targetWkt 目标坐标系WKT定义
     * @return
     */
public static MathTransform createMathTransform(String sourceWkt, String targetWkt){
    CoordinateReferenceSystem source = null;
    CoordinateReferenceSystem target = null;
    try {
        source = CRS.parseWKT(sourceWkt);
        target = CRS.parseWKT(targetWkt);
    } catch (FactoryException e) {
        e.printStackTrace();
    }

    MathTransform transform = null;
    try {
        transform = CRS.findMathTransform(source, target);
    } catch (FactoryException e) {
        e.printStackTrace();
    }
    return transform;
}
</code></pre>
<ol start="2">
<li>将wkt转换为geometry</li>
</ol>
<pre><code class="language-java">    /**
     * 将wkt数据转为geometry数据
     * @param wkt
     * @return
     */
public static Geometry transformWktToGeometry(String wkt){
    GeometryFactory geometryFactory = JTSFactoryFinder.getGeometryFactory();
    WKTReader reader = new WKTReader(geometryFactory);
    Geometry geometry = null;
    try {
        geometry = (Geometry) reader.read(wkt);
    } catch (ParseException e) {
        e.printStackTrace();
    }
    return geometry;
}
</code></pre>
<ol start="3">
<li>将坐标转为指定坐标系</li>
</ol>
<pre><code class="language-java">    /**
     * 将输入要素转换为指定坐标系
     * @param geometry
     * @param mathTransform 坐标转换方法
     * @return
     */
public static Geometry transformGeometryProjection(Geometry geometry, MathTransform mathTransform){
    Geometry result = null;
    try {
        result = JTS.transform(geometry, mathTransform);
    } catch (TransformException e) {
        e.printStackTrace();
    }
    return result;
}


</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[组织树的递归算法]]></title>
        <id>https://hanjingyuan.github.io/post/eAx-5ylvO/</id>
        <link href="https://hanjingyuan.github.io/post/eAx-5ylvO/">
        </link>
        <updated>2020-01-09T01:01:47.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>普通递归算法</li>
</ol>
<pre><code class="language-js">xxzxServ.getSelectedNodes = function(treeList, m) {
    for(let i=0;i&lt;treeList.length;i++){
        if (treeList[i].selected === true) {
            m.push(treeList[i])
        }
        let children = treeList[i].children;
        if (Array.isArray(children) &amp;&amp; children.length &gt; 0) {
            children.forEach(function (item) {
                xxzxServ.getCheckedNodes([item], m)
            })
        }
    }
    return m
};
</code></pre>
<ol start="2">
<li>进阶递归:对组织树进行递归，若节点为图层节点，那么此节点被删掉不显示。同时增加判断，若父节点的子节点全被删掉了，那么要被父节点置空。</li>
</ol>
<pre><code class="language-js">function treeFormat(treeList) {
    for(let i=0;i&lt;treeList.length;i++){
        if (treeList[i].layerId.length &gt; 0) {
            delete treeList[i];
            continue
        }
        if(treeList[i].hasOwnProperty('children')){
            let children = treeList[i].children;
            if (Array.isArray(children) &amp;&amp; children.length &gt; 0) {
                treeFormat(children)
            }
        }
        //这一步是为了 删除数组项后，被删除项会被定义为empty，且数组长度不变
        //此时需要通过filter来过滤数组，实现数组长度被降低
        if(Array.isArray(treeList[i].children)){
            treeList[i].children = 
            treeList[i].children.filter(item=&gt;item !== undefined);
        }

    }
 }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[maven打包相关]]></title>
        <id>https://hanjingyuan.github.io/post/cIuOD1fpK/</id>
        <link href="https://hanjingyuan.github.io/post/cIuOD1fpK/">
        </link>
        <updated>2019-12-26T02:03:27.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>打包时忽略test</li>
</ol>
<pre><code class="language-xml">mvn package -Dmaven.test.skip=true
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[postgis土地利用分析查询]]></title>
        <id>https://hanjingyuan.github.io/post/IBAE_Gh3I/</id>
        <link href="https://hanjingyuan.github.io/post/IBAE_Gh3I/">
        </link>
        <updated>2019-12-24T01:29:36.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>求出裁剪后的图斑</li>
</ol>
<pre><code class="language-sql">SELECT res.*, 
	st_area(res.wkt) as real_area, 
	st_astext(res.wkt) as real_wkt
FROM (
		SELECT jb.*,
		ST_Intersection(jb.geom, 
						st_geomfromtext('POLYGON ((113.14665136337281 28.156513464450835, 113.14883825778962 28.154443204402924, 113.14498932361603 28.153830873966218, 113.14665136337281 28.156513464450835))',4490)
			) 
		AS wkt
		FROM public.jbntbhtb as jb
		WHERE 
			ST_Intersects(jb.geom, 
						  st_geomfromtext('POLYGON ((113.14665136337281 28.156513464450835, 113.14883825778962 28.154443204402924, 113.14498932361603 28.153830873966218, 113.14665136337281 28.156513464450835))',4490)
				)
	) 
AS res;
</code></pre>
]]></content>
    </entry>
</feed>